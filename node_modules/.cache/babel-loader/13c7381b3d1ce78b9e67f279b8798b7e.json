{"ast":null,"code":"var _jsxFileName = \"/Users/loganmorro/Documents/Employee-Directory/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Layout from \"./components/Layout\";\nimport Header from \"./components/Header\";\nimport Navigation from \"./components/Navigation\";\nimport EmployeeCardList from \"./components/EmployeeCardList\";\nimport Footer from \"./components/Footer\";\nimport employees from \"./data/employees.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sorted, setSorted] = useState(false);\n  const [data, setEmployees] = useState(employees);\n\n  function handleSearchTerm(event) {\n    setSearchTerm(event.target.value);\n  }\n\n  function handleSortByName() {\n    // sort array ascending or descending by first name\n    if (!sorted) {\n      setEmployees(data.sort((a, b) => a.name > b.name ? 1 : -1));\n      setSorted(true);\n    } else {\n      setEmployees(data.sort((a, b) => a.name > b.name ? -1 : 1));\n      setSorted(false);\n    }\n  }\n\n  function handleSortByDept() {\n    // sort array ascending or descending by dept name\n    if (!sorted) {\n      setEmployees(data.sort((a, b) => a.department > b.department ? 1 : -1));\n      setSorted(true);\n    } else {\n      setEmployees(data.sort((a, b) => a.department > b.department ? -1 : 1));\n      setSorted(false);\n    }\n  } // the filteredEmployees variable only stores employee names that start with with the matching string you type\n\n\n  const filteredEmployees = data.filter(employee => employee.name.toLowerCase().startsWith(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Employee Directory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Search for an employee or sort by Name or Category.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onSearch: handleSearchTerm,\n        searchTerm: searchTerm,\n        handleSortByName: handleSortByName,\n        handleSortByDept: handleSortByDept\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EmployeeCardList, {\n        data: filteredEmployees\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"c+NqI0rjIV+FIZr0zdcpF0fw8lc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/loganmorro/Documents/Employee-Directory/src/App.js"],"names":["React","useState","Layout","Header","Navigation","EmployeeCardList","Footer","employees","App","searchTerm","setSearchTerm","sorted","setSorted","data","setEmployees","handleSearchTerm","event","target","value","handleSortByName","sort","a","b","name","handleSortByDept","department","filteredEmployees","filter","employee","toLowerCase","startsWith"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Layout from \"./components/Layout\";\nimport Header from \"./components/Header\";\nimport Navigation from \"./components/Navigation\";\nimport EmployeeCardList from \"./components/EmployeeCardList\";\nimport Footer from \"./components/Footer\";\nimport employees from \"./data/employees.json\";\n\nfunction App() {\n    const [ searchTerm, setSearchTerm ] = useState(\"\");\n    const [ sorted, setSorted] = useState(false);\n    const [ data, setEmployees ] = useState(employees);\n\n    function handleSearchTerm(event)  {\n        setSearchTerm(event.target.value)\n    }\n\n    function handleSortByName() {\n        // sort array ascending or descending by first name\n        if (!sorted) {\n            setEmployees(data.sort((a, b) => (a.name > b.name) ? 1 : -1));\n            setSorted(true);\n        } else {\n            setEmployees(data.sort((a, b) => (a.name > b.name) ? -1 : 1));\n            setSorted(false);\n        }\n    }\n\n    function handleSortByDept() {\n        // sort array ascending or descending by dept name\n        if (!sorted) {\n            setEmployees(data.sort((a, b) => (a.department > b.department) ? 1 : -1));\n            setSorted(true);\n        } else {\n            setEmployees(data.sort((a, b) => (a.department > b.department) ? -1 : 1));\n            setSorted(false);\n        }\n    }\n\n    // the filteredEmployees variable only stores employee names that start with with the matching string you type\n    const filteredEmployees = data.filter(employee => employee.name.toLowerCase().startsWith(searchTerm.toLowerCase()));\n    return (\n        <div>\n            <Header/>\n            <Layout>\n                <h1>Employee Directory</h1>\n                <p>Search for an employee or sort by Name or Category.</p>\n                {/*the handleSearchTerm method and searchTerm state get passed down to the Navigation component via props with the onSearch and searchTerm props*/}\n                <Navigation\n                    onSearch={handleSearchTerm}\n                    searchTerm={searchTerm}\n                    handleSortByName={handleSortByName}\n                    handleSortByDept={handleSortByDept}\n                />\n                {/* the employees array gets the filteredEmployees data via the data prop */}\n                <EmployeeCardList data={filteredEmployees}/>\n                <Footer/>\n            </Layout>\n        </div>\n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}